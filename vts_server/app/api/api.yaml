swagger: "2.0"
info: 
  title: WebRTC API
  description: Test WebRTC API with express
  version: 1.0 
  contact: 
    email: ykim5470@vreducation.kr
  servers: 
    -url: "https://106.255.237.50:4000/"
    description: Server host url 

schemes: [https]

paths:
  # /createRoomNumber: 
  #   get: 
  #     summary: Returns a random room number
  #     responses: 
  #       200:
  #         description: Success
  #         schema:
  #           type: object
  #           properties:
  #             roomId:
  #               type: string
  #           example: {roomId: e26a3d4c-276e-4794-a310-d093b15beef3}
  #       400:
  #         description: User Error (Invalid Request)
  #       404: 
  #         description: Not Found Error 
  #       500:
  #         description: Internal Server Error 

  # /roomList:
  #   get:
  #     summary: Returns a live channel list
  #     description: Array Return 
  #     responses:
  #       200:
  #         description: Success
  #         schema:
  #           type: array
  #           items:
  #             type: object
  #             properties:
  #               RoomId:
  #                 type: string,
  #               setConfig:
  #                 type: array
  #                 items:
  #                   type: object
  #                   properties:
  #                     Title:
  #                       type: string
  #                     Host:
  #                       type: string
  #                     Thumbnail:
  #                       type: string
  #                     RoomCategory:
  #                       type: string
  #                     CreatedAt:
  #                       type: string
  #           example: [{RoomId: ba11a782-c2bf-403c-9902-1794f5779ecb, setConfig: [{Title: test, Host: host, Thumbnail: uploads/GUIDE/streaming/live/thumbnailSource/xxxx.png, RoomCategory: 'living', CreatedAt: '2022-04-12T04:20:58:000Z'}]}]
  #       400:
  #         description: User Error (Invalid Request)

                    
  # /guideRoomList:
  #     get:
  #       summary: Returns a whole live channel list
  #       description: Array Return 
  #       responses:
  #         200:
  #           description: Success
  #           schema:
  #             type: array
  #             items:
  #               type: object
  #               properties:
  #                 RoomId:
  #                   type: string,
  #                 setConfig:
  #                   type: array
  #                   items:
  #                     type: object
  #                     properties:
  #                       Title:
  #                         type: string
  #                       Host:
  #                         type: string
  #                       Thumbnail:
  #                         type: string
  #                       RoomCategory:
  #                         type: string
  #                       CreatedAt:
  #                         type: string
  #             example: [{RoomId: ba11a782-c2bf-403c-9902-1794f5779ecb, setConfig: [{Title: test, Host: host, Thumbnail: uploads/GUIDE/streaming/live/thumbnailSource/xxxx.png, RoomCategory: 'living', CreatedAt: '2022-04-12T04:20:58:000Z'}]}]
  #         400:
  #           description: User Error (Invalid Request)
  /userInfo:
    get:
      summary: 사용자 정보 반환
      responses: 
        200:
          description: SUCCESS
          schema:
            type: object
            properties:
              User:
                type: string
              Role:
                type: string
              Msg:
                type: string
              Id:
                type: string
            example: {User: user1, Role: user, Msg: 'Hello World', id: '1'}


  /registerUserInfo:
    post:
      summary: 사용자 정보 등록
      parameters:
        - in: body
          name: userInfo
          schema:
            type: object
            properties:
              name:
                type: string
              role:
                type: string
              message:
                type: string
      responses:
        201:
          description: Created
          
          
  /updateUserInfo:
    put:
      summary: 사용자 정보 수정
      parameters:
        - in: body
          name: userInfo
          schema:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              role:
                type: string
              message:
                type: string
      responses:
        201:
          description: Updated
  
  /deleteUserInfo:
    delete:
      summary: 사용자 정보 수정
      parameters:
        - in: body
          name: userInfo
          schema:
            type: object
            properties:
              id:
                type: integer
      responses:
        201:
          description: Deleted


